<script>
  function SDDao() {
    this.insert = "<%sdinsert%>";
    this.capLeft = parseFloat("<%sdleft%>");
    this.capUsed = parseFloat("<%sdused%>");
    this.formatKey = "sd_format";
    this.formatCmd = "sdformat=1";
  }
  var ISSD = (g_defaultStorage == 1);
  var mycard = new SDDao();
  var v_recCount = new V_NumRange(1, mycard.recMax, GL("mjpeg_nums"));
  var co_recCount = new CheckerObj(v_recCount, gco_empty);
  CTRLARY = {
    sdFileFormat: new Ctrl_Select("sdFileFormat", "<%sdfileformatname.all%>", "<%sdfileformat%>", "sdfileformat=")
  };
  function MY_ONLOAD() {
    FixStatus();
    g_lockLink = false;
  }
  function FixStatus() {
    var sw = (GetCCV("recType") == 0);
  }
  function WIP3(ctx) {
    DW("<tr><td colspan=3 class=m1 height=30 >");
    DW(ctx);
    DW("</td></tr>");
  }
  function WIP2(tid, ctx) {
    DW("<tr><td width=20>&nbsp;</td><td class=b1 width=150 height=30 >");
    DW(GL(tid) + ":</td><td>" + ctx + "</td></tr>");
  }
  function WIP_L() {
   // WIP3('<hr >');
  }
  function SendOut(setcmd) {
    if (confirm(GL("card_format_warn"))) {
      SendHttp(c_iniUrl + "&" + setcmd, false, SendOK);
    }
  }
  function SendOK() {
    if (g_SubmitHttp.readyState == 4) {
      WS("");
      if (g_SubmitHttp.status == 200) {
        var txt = g_SubmitHttp.responseText;
        if ((txt.indexOf("OK sdformat") >= 0) || (txt.indexOf("OK cfformat") >= 0)) {
          alert(GL("card_format_ok"));
          ChangeContent(null, true);
        } else {
          alert(GL("card_format_fail"));
        }
      } else {
        alert(GL("card_format_fail"));
      }
    }
  }
  function UmountCallBack() {
    if (g_SubmitHttp.readyState == 4) {
      WS("");
      if (g_SubmitHttp.status == 200) {
        var txt = g_SubmitHttp.responseText;
        if (txt.indexOf("OK sdunmount") >= 0) {
          alert("SD card Unmount OK");
          ChangeContent(null, true);
        } else {
          alert("SD card is busy.\nUnmount failed");
        }
      } else {
        alert("SD card Unmount failed");
      }
    }
  }
  function MountCallBack() {
    if (g_SubmitHttp.readyState == 4) {
      WS("");
      if (g_SubmitHttp.status == 200) {
        var txt = g_SubmitHttp.responseText;
        if (txt.indexOf("OK sdunmount") >= 0) {
          ChangeContent(null, true);
        } else {
          alert("SD card mount failed");
          ChangeContent(null, true);
        }
      } else {
        alert("SD card mount failed");
        ChangeContent(null, true);
      }
    }
  }
  function GBN(tid, setcmd) {
    return "<input type=button class=m1 style='width:80px' value='" + GL(tid) + "' onClick='SendOut(\"" + setcmd + "\")' >";
  }
  function ClickUnmountSD() {
    SendHttp(c_iniUrl + GetSetterCmdKV("sdunmount", "1"), false, UmountCallBack);
  }
  function ClickMountSD() {
    SendHttp(c_iniUrl + GetSetterCmdKV("sdunmount", "8"), false, MountCallBack);
  }
  WriteAppPH((ISSD) ? "sd_app_set": "cf_app_set");
  WTablePH();
  WIP2("sdFileFormat", WH_("sdFileFormat"));
  WIP3("<br><center>" + CreateSubmitButton_());
  WIP3("");
  DW("<tr><td colspan=3 class=m3 ><br>");
  if (mycard.insert == 3) {
    var totalSize = mycard.capLeft + mycard.capUsed;
    var totalStr = GetCapacityString(totalSize, 2);
    DW("<table class=m1><tr><td width=130 >" + GL((ISSD) ? "sd_cap": "cf_cap") + ":</td><td>" + totalStr + "</td></tr>");
    DW("<tr><td >" + GL((ISSD) ? "sd_usage": "cf_usage") + ":</td><td>" + Math.round((mycard.capUsed / totalSize) * 100) + " %</td></tr>");
    DW("<tr><td colspan=2 >&nbsp;</td></tr>");
    DW("<tr><td class=m3>" + GL("disk_format") + ":</td><td>" + ((mycard.formatCmd != "") ? GBN(mycard.formatKey, mycard.formatCmd) : GL(mycard.formatKey)) + "</td></tr>");
    DW("<tr><td class=m3>Storage Disk Unmount:</td><td><input type=button class=m1 value='SD Unmount' onClick='ClickUnmountSD()' ></td></tr>");
    DW("</table>");
  } else if (mycard.insert == 1) {
    DW("SD card is not mounted.");
    DW("<tr><td class=m3>Storage Disk mount:</td><td><input type=button class=m1 value='Mount' onClick='ClickMountSD()' ></td></tr>");
  } else {
    DW(GL((ISSD) ? "sd_no_card": "cf_no_card"));
    //DW("<br>or, the card is not mounted.");
  }
  DW("<br></td></tr>");
  WTablePB();
  WriteAppPB();
  ALC();
</script>